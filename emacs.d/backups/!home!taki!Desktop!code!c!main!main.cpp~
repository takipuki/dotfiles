#include <bits/stdc++.h>

using namespace std;

void octal(int decimal, int base) {
    int track = 0;
    int store = decimal;
    int octal = 0;
    while (store > 0) {
        int reminder = store % base;
        int quotient = store / base;

        store /= base;
        octal = octal * 10 + reminder;
        track++;
    }

    cout << octal << endl;

    int reversed_Octal = 0;

    while (octal > 0) {
        int reminder = octal % 10;
        reversed_Octal = reversed_Octal * 10 + reminder;

        octal /= 10;
        track--;
    }
    reversed_Octal *= pow(10, track);
    cout << reversed_Octal << endl;
    cout << "Track " << track << endl;
}

void hexaDecimal(int decimal, int base) {
    char alphabet[] = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I',
                       'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R',
                       'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'};

    int store = decimal;

    int *hexa = new int[decimal];
    int iteration = 0;

    while (store > 0) {
        int reminder = store % base;
        hexa[iteration] = reminder;
        iteration++;

        store /= base;
    }

    iteration--;
    while (iteration >= 0) {
        int store_Hexa = hexa[iteration];

        if (store_Hexa > 9) {
            cout << alphabet[store_Hexa - 10];
        } else {
            cout << store_Hexa;
        }

        iteration--;
    }

    delete[] hexa;
}

int main() {
    int decimal, base;
    cin >> decimal >> base;
    if (base <= 9)
        octal(decimal, base);
    else
        hexaDecimal(decimal, base);

    return 0;
}
