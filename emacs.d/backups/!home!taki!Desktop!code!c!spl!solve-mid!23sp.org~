#+setupfile: /home/taki/Desktop/code/c/spl/setup.org
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../clean.css"/>
#+HTML_HEAD: <style type="text/css">
#+HTML_HEAD:  ol { list-style-type: lower-alpha; }
#+HTML_HEAD: </style>

#+title: Mid - 23sp
#+property: header-args :exports none

* 01
a) invalid: 1, 3, 4, 5

b) ~a = 3~ \\
   ~b = 3*4 = 12.0~ \\
   ~c = (3 > 12 || 3 == 3) * 2 = (0 || 1) * 2 = 2~ \\
   ~d = 3/2 = 1.0~

   #+name: 01.b
   #+begin_src C :includes <stdio.h>
   int a = (float)15/4;
   float b = a++*a--;
   int c = (a > b || a == 1 + 2) * 2;
   float d = a/c;
   printf("%d, %.2f, %d, %.2f\n", a, b, c, d);
   #+end_src

   #+RESULTS: 01.b
   | 3 | 12.0 | 2 | 1.0 |

c) ~b = 10~:
   #+begin_example
   SPL
   Spring
   #+end_example
   \\

   ~b = 2~:
   #+begin_example
   Spring
   #+end_example
   \\

   #+name: 01.c
   #+begin_src C :results output
   #include <stdio.h>
   int main() {
       int b = 2;

       if (b >= 10) {
           printf("SPL\n");
           b--;
       }

       if (b < 10) {
           printf("Spring\n");
           b--;
       }
       else if ((b >= 3) || (b < 10))
           printf("2023\n");
       else if (b >= 3 && b < 10)
           printf("Happy Coding!");
       else
           printf("Huh!");
       return 0;
   }
   #+end_src

   #+RESULTS: 01.c
   : Spring

* 02
a) rewrite using switch

   #+begin_src C :exports code
   int n, a;
   scanf(“%d %d”, &n, &a);

   switch (n > a) {
   case 1:
       switch (n-a > 5) {
       case 1:
           printf(“Difference is greater than 5\n”);
           break;
       default:
           printf(“Difference is less than or equal to 5\n”);
           break;
       }
       break;
   default:
       printf(“Please give a larger value of n\n”);
       break;
   }
   #+end_src
   \\

b) Trace table
   
   #+name: 02.b
   #+begin_src C :results output table :exports results
   #include <stdio.h>
   int main() {
       int j = 8, result = 5, i = 0, x = 2, y = 2;
       printf("i j result x y j>3\n");
       for (; j > 3; j--) {
           printf("%d %d %d %d %d %d\n", i, j, result, x, y, j > 3);
           i =  (j * result) / x;
           result += y;
           x += (y-2);
           y++;
       } 
       printf("%d %d %d %d %d %d\n", i, j, result, x, y, j > 3);
   }
   #+end_src

   #+RESULTS: 02.b
   |  i | j | result |  x | y | j>3 |
   |  0 | 8 |      5 |  2 | 2 |   1 |
   | 20 | 7 |      7 |  2 | 3 |   1 |
   | 24 | 6 |     10 |  3 | 4 |   1 |
   | 20 | 5 |     14 |  5 | 5 |   1 |
   | 14 | 4 |     19 |  8 | 6 |   1 |
   |  9 | 3 |     25 | 12 | 7 |   0 |

* 03
a) rewrite with do-while

   #+name: 03.a
   #+begin_src C :exports code
   #include <stdio.h>

   int main() {
       int weeks = 2, days_in_week = 7;

       int i = 1;
       do {
           printf("Week: %d\n", i);

           int j = 1;
           do {
               if (i % 2 == 0) {
                   if (j % 2 == 0)
                       printf("Day: %d\n", j);
               }
               else{
                   if (j % 2 != 0)
                       printf("Day: %d\n", j);
               }
               j++;
           } while (j <= days_in_week);
           i++;
       } while (i <= weeks);

       return 0;
   }
   #+end_src
   \\

b) WAP

   #+name: 03.b
   #+begin_src C :exports code :results output
   #include <stdio.h>

   int main() {
       int n; scanf("%d", &n);

       for (int i = 1; i <= n; i++) {
           for (int j = 0; j < (n-i)*2; j++)
               putchar(' ');

           int start = 2*i;
           for (int j = 0; j < i; j++) {
               printf("%d ", start);
               start += 2;
           }

           start -= 4;
           for (int j = 0; j < i-1; j++) {
               printf("%d ", start);
               start -= 2;
           }

           putchar('\n');
       }
   }
   #+end_src

   \\

* 04
a) WAP

   #+name: 04.a
   #+begin_src C :exports code
   #include <stdio.h>

   int main() {
       float sum_cg3 = 0;
       int count_cg3 = 0;

       float max = 0;
       float min = 5;
       int count_max = 0;

       float tmp;
       for (int i = 0; i < 100; i++) {
           scanf("%d", &tmp);

           if (tmp > 3) {
               sum_cg3 += tmp;
               count_cg3++;
           }
        
           if (tmp > max) {
               max = tmp;
               count_max = 1;
           } else if (tmp == max)
               count_max++;

           if (tmp < min) min = tmp;
       }

       float avg_cg3 = sum_cg3 / count_cg3;

       printf("Average: %.2f\n", avg_cg3);
       printf("Higest: %.2f and count: %d\n", max, count_max);
       printf("Lowest: %.2f\n", min);
   }
   #+end_src
   \\

* 05
a) Initializing ~arr~ with zeros and ~k~ with 15.

   In the first loop, the values at index 1, 3 and 5 are changed.

   ~arr[1] = 16 - 2 = 14~ \\
   ~k      = 16 + 1 = 17~

   ~arr[3] = 18 - 2 = 16~ \\
   ~k      = 18 + 1 = 19~ \\

   ~arr[5] = 20 - 2 = 18~ \\
   ~k      = 20 + 1 = 21~

   ~arr = {0, 14, 0, 16, 0, 18, 0, 0, 0, 0}~ \\
   ~k   = 21~

   After initializing ~i~ with 0, the second loop modifies the elements
   at indices from 6 to 10.

   ~arr[9] = 1~ \\
   ~arr[8] = 2~ \\
   ~arr[7] = 3~ \\
   ~arr[6] = 4~ \\

   ~arr[9] = 5~ \\
   ~arr[8] = 6~ \\
   ~arr[7] = 7~ \\

   ~arr[9] = 8~ \\
   ~arr[8] = 9~ \\

   ~arr[9] = 10~ \\

   ~arr = {0, 14, 0, 16, 0, 18, 4, 7, 9, 10}~ \\
   ~c   = 10~

   The third loop modifies the even indices e.g. 0, 2, 4.

   ~arr[0] = 22~ \\
   ~arr[2] = 23~ \\
   ~arr[4] = 24~ \\
   ~arr[6] = 25~ \\
   ~arr[8] = 26~ \\

   ~arr = {22, 14, 23, 16, 24, 18, 25, 7, 26, 10}~ \\
   ~k   = 26~

   #+name: 05.a
   #+begin_src C
   #include <stdio.h>

   int main() {
       int arr[10] = {0};
       int k = 15;
       for (int i = 1; i < 6; i += 2) {
           arr[i] = ++k - 2;
           k++;
       }

       printf("arr = {")
           for (int i = 0; i < 9; i++)
               printf("%d, ", arr[i]);
       printf("%d}\n", arr[9]);
       printf("k   = %d\n", k);

       int c = 0;
       for (int i = 6; i < 10; i++) {
           for (int j = 10; j >= i; j--) {
               arr[j] = ++c;
           }
       }

       printf("arr = {")
           for (int i = 0; i < 9; i++)
               printf("%d, ", arr[i]);
       printf("%d}\n", arr[9]);
       printf("c   = %d\n", c);

       for (int i = 0; i < 10; i++) {
           if (i % 2 == 0) {
               arr[i] = ++k;
           }
       }

       printf("arr = {")
           for (int i = 0; i < 9; i++)
               printf("%d, ", arr[i]);
       printf("%d}\n", arr[9]);
       printf("k   = %d\n", k);
   }
   #+end_src

b) 2d array ~arr~

   | 1 |  2 |  3 |  5 |  8 |
   | 2 |  3 |  5 |  8 | 13 |
   | 3 |  5 |  8 | 13 | 21 |
   | 5 |  8 | 13 | 21 | 34 |
   | 8 | 13 | 21 | 34 | 55 |

   #+name: 05.b
   #+begin_src C :results output table
   #include <stdio.h>

   int main() {
       int arr[100][100], i, j, t1 = 0, t2 = 1, t3, x, y, z;

       for (i = 0; i < 5; i++) {
           x = t1, y = t2, z = t1 + t2;
           for (j = 0; j < 5; j++) {
               t3 = t1 + t2;
               arr[j][i] = t3;
               t1 = t2;
               t2 = t3;
           }
           t1 = y;
           t2 = z;
       }

       for (int i = 0; i < 5; i++) {
           for (int j = 0; j < 5; j++)
               printf("%d ", arr[i][j]);
           putchar('\n');
       }
   }
   #+end_src
