#+SETUPFILE: "../../setup.org"
#+OPTIONS: toc:t

#+TITLE: Structure

* 01 
#+begin_src C -n
#include <stdio.h>

typedef struct {
    char name[20];
    char id[20];
    float cgpa;
} std;

int main() {
    std s;
    scanf("%[^\n]%*c", s.name);
    scanf("%[^\n]%*c", s.id);
    scanf("%f", &s.cgpa);

    printf("Name: %s\n", s.name);
    printf("Student ID: %s\n", s.id);
    printf("CGPA: %.2f\n", s.cgpa);
}
#+end_src
* 02 
#+begin_src C -n
#include <stdio.h>

typedef struct {
    char name[20];
    char id[20];
    float cgpa;
} std;

int main() {
    int n; scanf("%d%*c", &n);
    std s[n];
    for (int i = 0; i < n; i++) {
        scanf("%[^\n]%*c", s[i].name);
        scanf("%[^\n]%*c", s[i].id);
        scanf("%f%*c", &s[i].cgpa);
    }

    for (int i = 0; i < n; i++) {
        printf("Student %d: %s\n", i+1, s[i].name);
        printf("Student ID: %s\n", s[i].id);
        printf("CGPA: %.2f\n", s[i].cgpa);
    }
}
#+end_src
* 03 
#+begin_src C -n
#include <stdio.h>
#include <math.h>

typedef struct {
    int x, y;
} point;

int main() {
    point a, b;
    scanf("%d%d", &a.x, &a.y);
    scanf("%d%d", &b.x, &b.y);
    float dis = sqrt( (a.x-b.x)*(a.x-b.x) + (a.y-b.y)*(a.y-b.y) );
    printf("The distance is %.2f unit\n", dis);
}
#+end_src
* 04 
#+begin_src C -n
#include <stdio.h>
#include <math.h>

typedef struct {
    int x, y;
} point;

float dis(point a, point b) {
    return sqrt( (a.x - b.x)*(a.x - b.x) + (a.y - b.y)*(a.y - b.y) );
}

int main() {
    point a, b, c;
    scanf("%d%d", &a.x, &a.y);
    scanf("%d%d", &b.x, &b.y);
    scanf("%d%d", &c.x, &c.y);
    float A = dis(b, c);
    float B = dis(c, a);
    float C = dis(a, b);
    if (A+B <= C || B+C <= A || C+A <= B) {
        puts("They are in the same line");
        return 0;
    }
    float s = (A+B+C) / 2;
    float area = sqrt( s*(s-A)*(s-B)*(s-C) );
    printf("The area is %.2f unit\n", area);
}
#+end_src
* 05 
#+begin_src C -n
#+end_src
* 06 
#+begin_src C -n
#+end_src
* 07 
#+begin_src C -n
#+end_src
* 08 
#+begin_src C -n
#+end_src
* 09 
#+begin_src C -n
#+end_src
* 10 
#+begin_src C -n
#+end_src
* 11 
#+begin_src C -n
#+end_src
* 12 
#+begin_src C -n
#+end_src
* 13 
#+begin_src C -n
#+end_src
