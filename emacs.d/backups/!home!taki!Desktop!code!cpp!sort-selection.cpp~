#include <iostream>
using namespace std;

#define nl << '\n'

/*
 * trys to follow the deck example
 * actually inserts into the left array and shifts
 */
void sort(int arr[], int n) {
    for (int i = 1; i < n; i++)
        for (int j = 0; j < i; j++)
            if (arr[i] < arr[j]) {
                int tmp = arr[i];
                for (int k = i; k > j; k--)
                    arr[k] = arr[k-1];
                arr[j] = tmp;
            }
}

/*
 * no need to shift
 * find the min/max and swap
 */
void sort_better(int arr[], int n) {
    int min, min_indx;
    int loop_n = n - 1;

    for (int i = 0; i < loop_n; i++) {
        min = arr[i];
        min_indx = i;
        for (int j = i+1; j < n; j++)
            if (arr[j] < min) {
                min = arr[j];
                min_indx = j;
            }

        if (min_indx != i) {
            int tmp = arr[i];
            arr[i] = min;
            arr[min_indx] = tmp;
        }
    }
}

int main() {
    ios::sync_with_stdio(false);
    int n; cin >> n;

    int arr[n];
    for (int i = 0; i < n; i++) cin >> arr[i];

    sort_better(arr, n);

    for (int i = 0; i < n; i++) cout << arr[i] << ' ';
    cout nl;
}
