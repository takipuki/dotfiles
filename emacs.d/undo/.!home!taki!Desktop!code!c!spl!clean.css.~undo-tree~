(undo-tree-save-format-version . 1)
"4aab981c58a2e91a5ef52c843bf6ee47b4efd49b"
[nil nil nil nil (26052 28902 160502 531000) 0 nil]
([nil nil ((1174 . 1178) (1160 . 1175) (#("margin" 0 6 (fontified t)) . -1160) (undo-tree-id0 . -6) (undo-tree-id1 . -3) (undo-tree-id2 . -3) (undo-tree-id3 . -3) (undo-tree-id4 . -3) (undo-tree-id5 . -4) (undo-tree-id6 . -4) (undo-tree-id7 . -4) (undo-tree-id8 . -4) (undo-tree-id9 . -4) (undo-tree-id10 . -4) (undo-tree-id11 . -4) (undo-tree-id12 . -4) (undo-tree-id13 . -4) (undo-tree-id14 . -4) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -5) (undo-tree-id29 . -5) (undo-tree-id30 . -5) (undo-tree-id31 . -5) (undo-tree-id32 . -5) (undo-tree-id33 . -5) (undo-tree-id34 . -5) (undo-tree-id35 . -5) (undo-tree-id36 . -5) (undo-tree-id37 . -5) (undo-tree-id38 . -5) (undo-tree-id39 . -5) (undo-tree-id40 . -5) (undo-tree-id41 . -5) (undo-tree-id42 . -5) (undo-tree-id43 . -5) (undo-tree-id44 . -5) (undo-tree-id45 . -5) (undo-tree-id46 . -5) (undo-tree-id47 . -5) (undo-tree-id48 . -5) (undo-tree-id49 . -5) (undo-tree-id50 . -5) (undo-tree-id51 . -5) (undo-tree-id52 . -5) (undo-tree-id53 . -5) (undo-tree-id54 . -5) (undo-tree-id55 . -5) (undo-tree-id56 . -5) (undo-tree-id57 . -5) (undo-tree-id58 . -6) (undo-tree-id59 . -6) (undo-tree-id60 . -6) (undo-tree-id61 . -6) (undo-tree-id62 . -6) (undo-tree-id63 . -6) (undo-tree-id64 . -6) (undo-tree-id65 . -6) (undo-tree-id66 . -6) (undo-tree-id67 . -6) (undo-tree-id68 . -6) (undo-tree-id69 . -6) (undo-tree-id70 . -6) (undo-tree-id71 . -6) (undo-tree-id72 . -6) (undo-tree-id73 . -6) (undo-tree-id74 . -6) (undo-tree-id75 . -6) (undo-tree-id76 . -6) (undo-tree-id77 . -6) (undo-tree-id78 . -6) (undo-tree-id79 . -6) (undo-tree-id80 . -6) (undo-tree-id81 . -6) (undo-tree-id82 . -6) (undo-tree-id83 . -6) (undo-tree-id84 . -6) (undo-tree-id85 . -6) (undo-tree-id86 . -6) (undo-tree-id87 . -6) (undo-tree-id88 . -6) (undo-tree-id89 . -6) (undo-tree-id90 . -6) (undo-tree-id91 . -6) (undo-tree-id92 . -6) (undo-tree-id93 . -6) (undo-tree-id94 . -6) (undo-tree-id95 . -6) (undo-tree-id96 . -6) (undo-tree-id97 . -6) (undo-tree-id98 . -6) (undo-tree-id99 . -6) (undo-tree-id100 . -6) (undo-tree-id101 . -6) (undo-tree-id102 . -6) (undo-tree-id103 . -6) (undo-tree-id104 . -6) (undo-tree-id105 . -6) (undo-tree-id106 . -6) (undo-tree-id107 . -6) (undo-tree-id108 . -6) (undo-tree-id109 . -6) (undo-tree-id110 . -6) (undo-tree-id111 . -6) (undo-tree-id112 . -6) (undo-tree-id113 . -6) (undo-tree-id114 . -6) (undo-tree-id115 . -6) (undo-tree-id116 . -6) (undo-tree-id117 . -6) (undo-tree-id118 . -6) (undo-tree-id119 . -6) (undo-tree-id120 . -6) (undo-tree-id121 . -6) (undo-tree-id122 . -6) (undo-tree-id123 . -6) (undo-tree-id124 . -6) (undo-tree-id125 . -6) (undo-tree-id126 . -6) (undo-tree-id127 . -6) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -6) (undo-tree-id131 . -6) (undo-tree-id132 . -6) (undo-tree-id133 . -6) (undo-tree-id134 . -6) (undo-tree-id135 . -6) (undo-tree-id136 . -6) (undo-tree-id137 . -6) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (undo-tree-id140 . -6) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -6) (undo-tree-id145 . -6) (undo-tree-id146 . -6) (undo-tree-id147 . -6) (undo-tree-id148 . -6) (undo-tree-id149 . -6) (undo-tree-id150 . -6) (undo-tree-id151 . -6) (undo-tree-id152 . -6) (undo-tree-id153 . -6) (undo-tree-id154 . -6) (undo-tree-id155 . -6) (undo-tree-id156 . -6) (undo-tree-id157 . -6) (undo-tree-id158 . -6) (undo-tree-id159 . -6) (undo-tree-id160 . -6) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) (undo-tree-id166 . -6) (undo-tree-id167 . -6) (undo-tree-id168 . -6) (undo-tree-id169 . -6) (undo-tree-id170 . -6) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -6) (undo-tree-id174 . -6) (undo-tree-id175 . -6) (undo-tree-id176 . -6) (undo-tree-id177 . -6) (undo-tree-id178 . -6) (undo-tree-id179 . -6) (undo-tree-id180 . -6) (undo-tree-id181 . -6) (undo-tree-id182 . -6) (undo-tree-id183 . -6) (undo-tree-id184 . -6) (undo-tree-id185 . -6) (undo-tree-id186 . -6) (undo-tree-id187 . -6) (undo-tree-id188 . -6) (undo-tree-id189 . -6) (undo-tree-id190 . -6) (undo-tree-id191 . -6) (undo-tree-id192 . -6) (undo-tree-id193 . -6) (undo-tree-id194 . -6) 1166 (1163 . 1166) (1160 . 1163) (1155 . 1160) (1154 . 1155) (1142 . 1154) (#("inli" 0 4 (fontified t)) . -1142) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) 1146 (1133 . 1146) (1129 . 1133) (#("    " 0 4 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1129) (1129 . 1133) (1128 . 1130) (1124 . 1129) (#("u" 0 1 (fontified t)) . -1124) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (#("l" 0 1 (fontified t)) . -1125) (undo-tree-id201 . -1) 1126 (1123 . 1126) (nil rear-nonsticky nil 1122 . 1123) (nil fontified nil 1101 . 1123) (1101 . 1123) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . -1101) (undo-tree-id202 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 1102) (1101 . 1103) (#("\"" 0 1 (fontified nil)) . -1101) (1100 . 1102) (1099 . 1100) (t 26052 12533 834201 871000) 1073) nil (26052 28902 160495 805000) 0 nil])
([nil nil ((1174 . 1178) (#("10px;" 0 5 (fontified t)) . 1174) (undo-tree-id203 . -1) (undo-tree-id204 . -4) (undo-tree-id205 . 1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . 3) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -5) (undo-tree-id285 . -5) (undo-tree-id286 . -5) (undo-tree-id287 . -5) (t 26052 28902 176872 666000)) nil (26052 28935 786992 36000) 0 nil])
([nil nil ((1174 . 1175) (#("2" 0 1 (fontified t)) . 1174) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (t 26052 28935 805009 186000)) nil (26052 28939 27227 826000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1389 . 1390) (nil fontified nil 1202 . 1390) (1202 . 1390) (1198 . 1202) (#("    " 0 4 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1198) (1198 . 1202) (1197 . 1199) (1195 . 1198) (1185 . 1195) (#("." 0 1 (fontified t)) . -1185) (undo-tree-id4 . -1) (#("l" 0 1 (fontified t)) . -1186) (undo-tree-id5 . -1) (#("i" 0 1 (fontified t)) . -1187) (undo-tree-id6 . -1) (#("n" 0 1 (fontified t)) . -1188) (undo-tree-id7 . -1) (#("e" 0 1 (fontified t)) . -1189) (undo-tree-id8 . -1) 1190 (1185 . 1190) (1181 . 1185) (1180 . 1181) (t 26052 28939 45150 858000) 1179) nil (26052 30310 472229 147000) 0 nil])
([nil nil (1242) nil (26052 30310 472224 58000) 0 nil])
([nil nil ((1202 . 1203)) nil (26052 30310 472223 465000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1201) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) nil (26052 30310 472222 413000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1200) (undo-tree-id0 . -1) (undo-tree-id1 . -1)) nil (26052 30310 472218 619000) 0 nil])
([nil nil ((1194 . 1195) (t 26052 30310 490528 468000)) nil (26052 30332 350964 669000) 0 nil])
([nil nil ((1611 . 1612) (t 26052 30332 368120 447000) 1611) nil (26052 30456 36764 938000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2297 . 2298) (nil fontified nil 1612 . 2298) (1612 . 2298)) nil (26052 30456 36764 461000) 0 nil])
([nil nil ((#("#include <stdio.h>


char symbols[36]; // maximum base 36; digits (0-9) and alpha (A-Z)


void dec_to_base(int n, int base) {

    if (!n) return;


    dec_to_base(n/base, base);

    putchar(symbols[n % base]);    // least significant bit so printing last

}


int main(void) {

    int base, n;

    scanf(\"%d %d\", &base, &n);


    if (base < 2 || base > 36) {

        printf(\"Only 2 to 36 bases are supported.\\n\");

        return 0;

    }


    if (!n) {

        printf(\"0\\n\");

        return 0;

    }


    // initializing symbols

    for (int i = 0; i < base; i++)

        symbols[i] = (i >= 10) ? 'A' + i-10 : '0' + i;


    dec_to_base(n, base);

    putchar('\\n');

}
" 0 33 (fontified nil) 33 34 (face (rainbow-delimiters-depth-2-face) fontified nil) 34 36 (fontified nil) 36 37 (face (rainbow-delimiters-depth-2-face) fontified nil) 37 66 (fontified nil) 66 67 (face (rainbow-delimiters-depth-2-face) fontified nil) 67 70 (fontified nil) 70 71 (face (rainbow-delimiters-depth-2-face) fontified nil) 71 82 (fontified nil) 82 83 (face (rainbow-delimiters-depth-2-face) fontified nil) 83 86 (fontified nil) 86 87 (face (rainbow-delimiters-depth-2-face) fontified nil) 87 90 (fontified nil) 90 106 (face css-selector fontified nil) 106 107 (face (rainbow-delimiters-depth-2-face css-selector) fontified nil) 107 122 (face css-selector fontified nil) 122 123 (face (rainbow-delimiters-depth-2-face css-selector) fontified nil) 123 124 (fontified nil) 124 125 (face (rainbow-delimiters-depth-2-face) fontified nil) 125 134 (fontified nil) 134 135 (face (rainbow-delimiters-depth-3-face) fontified nil) 135 137 (fontified nil) 137 138 (face (rainbow-delimiters-depth-3-face) fontified nil) 138 164 (fontified nil) 164 165 (face (rainbow-delimiters-depth-3-face) fontified nil) 165 177 (fontified nil) 177 178 (face (rainbow-delimiters-depth-3-face) fontified nil) 178 192 (fontified nil) 192 193 (face (rainbow-delimiters-depth-3-face) fontified nil) 193 200 (fontified nil) 200 201 (face (rainbow-delimiters-depth-4-face) fontified nil) 201 209 (fontified nil) 209 210 (face (rainbow-delimiters-depth-4-face) fontified nil) 210 211 (face (rainbow-delimiters-depth-3-face) fontified nil) 211 259 (fontified nil) 259 260 (face (rainbow-delimiters-depth-2-face) fontified nil) 260 263 (fontified nil) 263 271 (face css-selector fontified nil) 271 272 (face (rainbow-delimiters-depth-2-face css-selector) fontified nil) 272 276 (face css-selector fontified nil) 276 277 (face (rainbow-delimiters-depth-2-face css-selector) fontified nil) 277 278 (fontified nil) 278 279 (face (rainbow-delimiters-depth-2-face) fontified nil) 279 308 (fontified nil) 308 309 (face (rainbow-delimiters-depth-3-face) fontified nil) 309 316 (face font-lock-string-face fontified nil) 316 327 (fontified nil) 327 328 (face (rainbow-delimiters-depth-3-face) fontified nil) 328 339 (fontified nil) 339 340 (face (rainbow-delimiters-depth-3-face) fontified nil) 340 361 (fontified nil) 361 362 (face (rainbow-delimiters-depth-3-face) fontified nil) 362 363 (fontified nil) 363 364 (face (rainbow-delimiters-depth-3-face) fontified nil) 364 380 (fontified nil) 380 381 (face (rainbow-delimiters-depth-4-face) fontified nil) 381 418 (face font-lock-string-face fontified nil) 418 419 (face (rainbow-delimiters-depth-4-face) fontified nil) 419 445 (fontified nil) 445 446 (face (rainbow-delimiters-depth-3-face) fontified nil) 446 456 (fontified nil) 456 457 (face (rainbow-delimiters-depth-3-face) fontified nil) 457 459 (fontified nil) 459 460 (face (rainbow-delimiters-depth-3-face) fontified nil) 460 461 (fontified nil) 461 462 (face (rainbow-delimiters-depth-3-face) fontified nil) 462 478 (fontified nil) 478 479 (face (rainbow-delimiters-depth-4-face) fontified nil) 479 484 (face font-lock-string-face fontified nil) 484 485 (face (rainbow-delimiters-depth-4-face) fontified nil) 485 511 (fontified nil) 511 512 (face (rainbow-delimiters-depth-3-face) fontified nil) 512 552 (fontified nil) 552 553 (face (rainbow-delimiters-depth-3-face) fontified nil) 553 577 (fontified nil) 577 578 (face (rainbow-delimiters-depth-3-face) fontified nil) 578 595 (fontified nil) 595 596 (face (rainbow-delimiters-depth-3-face) fontified nil) 596 597 (fontified nil) 597 598 (face (rainbow-delimiters-depth-3-face) fontified nil) 598 601 (fontified nil) 601 602 (face (rainbow-delimiters-depth-3-face) fontified nil) 602 609 (fontified nil) 609 610 (face (rainbow-delimiters-depth-3-face) fontified nil) 610 613 (fontified nil) 613 616 (face font-lock-string-face fontified nil) 616 626 (fontified nil) 626 629 (face font-lock-string-face fontified nil) 629 652 (fontified nil) 652 653 (face (rainbow-delimiters-depth-3-face) fontified nil) 653 660 (fontified nil) 660 661 (face (rainbow-delimiters-depth-3-face) fontified nil) 661 675 (fontified nil) 675 676 (face (rainbow-delimiters-depth-3-face) fontified nil) 676 680 (face font-lock-string-face fontified nil) 680 681 (face (rainbow-delimiters-depth-3-face) fontified nil) 681 684 (fontified nil) 684 685 (face (rainbow-delimiters-depth-2-face) fontified nil) 685 686 (rear-nonsticky nil fontified nil)) . 1612) (undo-tree-id12 . -685) (undo-tree-id13 . -89) (undo-tree-id14 . -262) (nil fontified t 2293 . 2296) (nil fontified t 2292 . 2293) (nil fontified t 2288 . 2292) (nil fontified t 2287 . 2288) (nil fontified t 2273 . 2287) (nil fontified t 2272 . 2273) (nil fontified t 2265 . 2272) (nil fontified t 2264 . 2265) (nil fontified t 2241 . 2264) (nil fontified t 2238 . 2241) (nil fontified t 2228 . 2238) (nil fontified t 2225 . 2228) (nil fontified t 2222 . 2225) (nil fontified t 2221 . 2222) (nil fontified t 2214 . 2221) (nil fontified t 2213 . 2214) (nil fontified t 2210 . 2213) (nil fontified t 2209 . 2210) (nil fontified t 2208 . 2209) (nil fontified t 2207 . 2208) (nil fontified t 2190 . 2207) (nil fontified t 2189 . 2190) (nil fontified t 2165 . 2189) (nil fontified t 2164 . 2165) (nil fontified t 2124 . 2164) (nil fontified t 2123 . 2124) (nil fontified t 2097 . 2123) (nil fontified t 2096 . 2097) (nil fontified t 2091 . 2096) (nil fontified t 2090 . 2091) (nil fontified t 2074 . 2090) (nil fontified t 2073 . 2074) (nil fontified t 2072 . 2073) (nil fontified t 2071 . 2072) (nil fontified t 2069 . 2071) (nil fontified t 2068 . 2069) (nil fontified t 2058 . 2068) (nil fontified t 2057 . 2058) (nil fontified t 2031 . 2057) (nil fontified t 2030 . 2031) (nil fontified t 1993 . 2030) (nil fontified t 1992 . 1993) (nil fontified t 1976 . 1992) (nil fontified t 1975 . 1976) (nil fontified t 1974 . 1975) (nil fontified t 1973 . 1974) (nil fontified t 1952 . 1973) (nil fontified t 1951 . 1952) (nil fontified t 1940 . 1951) (nil fontified t 1939 . 1940) (nil fontified t 1928 . 1939) (nil fontified t 1921 . 1928) (nil fontified t 1920 . 1921) (nil fontified t 1891 . 1920) (nil fontified t 1890 . 1891) (nil fontified t 1889 . 1890) (nil fontified t 1888 . 1889) (nil fontified t 1884 . 1888) (nil fontified t 1883 . 1884) (nil fontified t 1875 . 1883) (nil fontified t 1872 . 1875) (nil fontified t 1871 . 1872) (nil fontified t 1823 . 1871) (nil fontified t 1822 . 1823) (nil fontified t 1821 . 1822) (nil fontified t 1813 . 1821) (nil fontified t 1812 . 1813) (nil fontified t 1805 . 1812) (nil fontified t 1804 . 1805) (nil fontified t 1790 . 1804) (nil fontified t 1789 . 1790) (nil fontified t 1777 . 1789) (nil fontified t 1776 . 1777) (nil fontified t 1750 . 1776) (nil fontified t 1749 . 1750) (nil fontified t 1747 . 1749) (nil fontified t 1746 . 1747) (nil fontified t 1737 . 1746) (nil fontified t 1736 . 1737) (nil fontified t 1735 . 1736) (nil fontified t 1734 . 1735) (nil fontified t 1719 . 1734) (nil fontified t 1718 . 1719) (nil fontified t 1702 . 1718) (nil fontified t 1699 . 1702) (nil fontified t 1698 . 1699) (nil fontified t 1695 . 1698) (nil fontified t 1694 . 1695) (nil fontified t 1683 . 1694) (nil fontified t 1682 . 1683) (nil fontified t 1679 . 1682) (nil fontified t 1678 . 1679) (nil fontified t 1649 . 1678) (nil fontified t 1648 . 1649) (nil fontified t 1646 . 1648) (nil fontified t 1645 . 1646) (nil fontified t 1612 . 1645) (nil rear-nonsticky t 2297 . 2298)) nil (26052 30456 36762 400000) 0 nil])
([nil nil ((1180 . 1181) 1179) nil (26052 30456 36755 527000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1264 . 1265) (nil fontified nil 1181 . 1265) (1181 . 1265)) nil (26052 30456 36754 595000) 0 nil])
([nil nil ((1195 . 1197) (#("-numbers-rows" 0 13 (face css-selector fontified t)) . 1195) (undo-tree-id9 . -12) (undo-tree-id10 . -13) (undo-tree-id11 . -13)) nil (26052 30456 36751 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2370 . 2371) (nil fontified nil 1686 . 2371) (1686 . 2371) (t 26052 30456 53373 144000)) nil (26052 30479 325267 710000) 0 nil])
([nil nil ((#("#include <stdio.h>


char symbols[36]; // maximum base 36; digits (0-9) and alpha (A-Z)


void dec_to_base(int n, int base) {

    if (!n) return;


    dec_to_base(n/base, base);

    putchar(symbols[n % base]);    // least significant bit so printing last

}


int main(void) {

    int base, n;

    scanf(\"%d %d\", &base, &n);


    if (base < 2 || base > 36) {

        printf(\"Only 2 to 36 bases are supported.\\n\");

        return 0;

    }


    if (!n) {

        printf(\"0\\n\");

        return 0;

    }


    // initializing symbols

    for (int i = 0; i < base; i++)

        symbols[i] = (i >= 10) ? 'A' + i-10 : '0' + i;


    dec_to_base(n, base);

    putchar('\\n');

}" 0 33 (fontified nil) 33 34 (face (rainbow-delimiters-depth-2-face) fontified nil) 34 36 (fontified nil) 36 37 (face (rainbow-delimiters-depth-2-face) fontified nil) 37 66 (fontified nil) 66 67 (face (rainbow-delimiters-depth-2-face) fontified nil) 67 70 (fontified nil) 70 71 (face (rainbow-delimiters-depth-2-face) fontified nil) 71 82 (fontified nil) 82 83 (face (rainbow-delimiters-depth-2-face) fontified nil) 83 86 (fontified nil) 86 87 (face (rainbow-delimiters-depth-2-face) fontified nil) 87 90 (fontified nil) 90 106 (face css-selector fontified nil) 106 107 (face (rainbow-delimiters-depth-2-face css-selector) fontified nil) 107 122 (face css-selector fontified nil) 122 123 (face (rainbow-delimiters-depth-2-face css-selector) fontified nil) 123 124 (fontified nil) 124 125 (face (rainbow-delimiters-depth-2-face) fontified nil) 125 134 (fontified nil) 134 135 (face (rainbow-delimiters-depth-3-face) fontified nil) 135 137 (fontified nil) 137 138 (face (rainbow-delimiters-depth-3-face) fontified nil) 138 164 (fontified nil) 164 165 (face (rainbow-delimiters-depth-3-face) fontified nil) 165 177 (fontified nil) 177 178 (face (rainbow-delimiters-depth-3-face) fontified nil) 178 192 (fontified nil) 192 193 (face (rainbow-delimiters-depth-3-face) fontified nil) 193 200 (fontified nil) 200 201 (face (rainbow-delimiters-depth-4-face) fontified nil) 201 209 (fontified nil) 209 210 (face (rainbow-delimiters-depth-4-face) fontified nil) 210 211 (face (rainbow-delimiters-depth-3-face) fontified nil) 211 259 (fontified nil) 259 260 (face (rainbow-delimiters-depth-2-face) fontified nil) 260 263 (fontified nil) 263 271 (face css-selector fontified nil) 271 272 (face (rainbow-delimiters-depth-2-face css-selector) fontified nil) 272 276 (face css-selector fontified nil) 276 277 (face (rainbow-delimiters-depth-2-face css-selector) fontified nil) 277 278 (fontified nil) 278 279 (face (rainbow-delimiters-depth-2-face) fontified nil) 279 308 (fontified nil) 308 309 (face (rainbow-delimiters-depth-3-face) fontified nil) 309 316 (face font-lock-string-face fontified nil) 316 327 (fontified nil) 327 328 (face (rainbow-delimiters-depth-3-face) fontified nil) 328 339 (fontified nil) 339 340 (face (rainbow-delimiters-depth-3-face) fontified nil) 340 361 (fontified nil) 361 362 (face (rainbow-delimiters-depth-3-face) fontified nil) 362 363 (fontified nil) 363 364 (face (rainbow-delimiters-depth-3-face) fontified nil) 364 380 (fontified nil) 380 381 (face (rainbow-delimiters-depth-4-face) fontified nil) 381 418 (face font-lock-string-face fontified nil) 418 419 (face (rainbow-delimiters-depth-4-face) fontified nil) 419 445 (fontified nil) 445 446 (face (rainbow-delimiters-depth-3-face) fontified nil) 446 456 (fontified nil) 456 457 (face (rainbow-delimiters-depth-3-face) fontified nil) 457 459 (fontified nil) 459 460 (face (rainbow-delimiters-depth-3-face) fontified nil) 460 461 (fontified nil) 461 462 (face (rainbow-delimiters-depth-3-face) fontified nil) 462 478 (fontified nil) 478 479 (face (rainbow-delimiters-depth-4-face) fontified nil) 479 484 (face font-lock-string-face fontified nil) 484 485 (face (rainbow-delimiters-depth-4-face) fontified nil) 485 511 (fontified nil) 511 512 (face (rainbow-delimiters-depth-3-face) fontified nil) 512 552 (fontified nil) 552 553 (face (rainbow-delimiters-depth-3-face) fontified nil) 553 577 (fontified nil) 577 578 (face (rainbow-delimiters-depth-3-face) fontified nil) 578 595 (fontified nil) 595 596 (face (rainbow-delimiters-depth-3-face) fontified nil) 596 597 (fontified nil) 597 598 (face (rainbow-delimiters-depth-3-face) fontified nil) 598 601 (fontified nil) 601 602 (face (rainbow-delimiters-depth-3-face) fontified nil) 602 609 (fontified nil) 609 610 (face (rainbow-delimiters-depth-3-face) fontified nil) 610 613 (fontified nil) 613 616 (face font-lock-string-face fontified nil) 616 626 (fontified nil) 626 629 (face font-lock-string-face fontified nil) 629 652 (fontified nil) 652 653 (face (rainbow-delimiters-depth-3-face) fontified nil) 653 660 (fontified nil) 660 661 (face (rainbow-delimiters-depth-3-face) fontified nil) 661 675 (fontified nil) 675 676 (face (rainbow-delimiters-depth-3-face) fontified nil) 676 680 (face font-lock-string-face fontified nil) 680 681 (face (rainbow-delimiters-depth-3-face) fontified nil) 681 684 (fontified nil) 684 685 (face (rainbow-delimiters-depth-2-face) rear-nonsticky nil fontified nil)) . 1686) (undo-tree-id17 . -684) (undo-tree-id18 . -126) (undo-tree-id19 . -126) (nil fontified t 2367 . 2370) (nil fontified t 2366 . 2367) (nil fontified t 2362 . 2366) (nil fontified t 2361 . 2362) (nil fontified t 2347 . 2361) (nil fontified t 2346 . 2347) (nil fontified t 2339 . 2346) (nil fontified t 2338 . 2339) (nil fontified t 2315 . 2338) (nil fontified t 2312 . 2315) (nil fontified t 2302 . 2312) (nil fontified t 2299 . 2302) (nil fontified t 2296 . 2299) (nil fontified t 2295 . 2296) (nil fontified t 2288 . 2295) (nil fontified t 2287 . 2288) (nil fontified t 2284 . 2287) (nil fontified t 2283 . 2284) (nil fontified t 2282 . 2283) (nil fontified t 2281 . 2282) (nil fontified t 2264 . 2281) (nil fontified t 2263 . 2264) (nil fontified t 2239 . 2263) (nil fontified t 2238 . 2239) (nil fontified t 2198 . 2238) (nil fontified t 2197 . 2198) (nil fontified t 2171 . 2197) (nil fontified t 2170 . 2171) (nil fontified t 2165 . 2170) (nil fontified t 2164 . 2165) (nil fontified t 2148 . 2164) (nil fontified t 2147 . 2148) (nil fontified t 2146 . 2147) (nil fontified t 2145 . 2146) (nil fontified t 2143 . 2145) (nil fontified t 2142 . 2143) (nil fontified t 2132 . 2142) (nil fontified t 2131 . 2132) (nil fontified t 2105 . 2131) (nil fontified t 2104 . 2105) (nil fontified t 2067 . 2104) (nil fontified t 2066 . 2067) (nil fontified t 2050 . 2066) (nil fontified t 2049 . 2050) (nil fontified t 2048 . 2049) (nil fontified t 2047 . 2048) (nil fontified t 2026 . 2047) (nil fontified t 2025 . 2026) (nil fontified t 2014 . 2025) (nil fontified t 2013 . 2014) (nil fontified t 2002 . 2013) (nil fontified t 1995 . 2002) (nil fontified t 1994 . 1995) (nil fontified t 1965 . 1994) (nil fontified t 1964 . 1965) (nil fontified t 1963 . 1964) (nil fontified t 1962 . 1963) (nil fontified t 1958 . 1962) (nil fontified t 1957 . 1958) (nil fontified t 1949 . 1957) (nil fontified t 1946 . 1949) (nil fontified t 1945 . 1946) (nil fontified t 1897 . 1945) (nil fontified t 1896 . 1897) (nil fontified t 1895 . 1896) (nil fontified t 1887 . 1895) (nil fontified t 1886 . 1887) (nil fontified t 1879 . 1886) (nil fontified t 1878 . 1879) (nil fontified t 1864 . 1878) (nil fontified t 1863 . 1864) (nil fontified t 1851 . 1863) (nil fontified t 1850 . 1851) (nil fontified t 1824 . 1850) (nil fontified t 1823 . 1824) (nil fontified t 1821 . 1823) (nil fontified t 1820 . 1821) (nil fontified t 1811 . 1820) (nil fontified t 1810 . 1811) (nil fontified t 1809 . 1810) (nil fontified t 1808 . 1809) (nil fontified t 1793 . 1808) (nil fontified t 1792 . 1793) (nil fontified t 1776 . 1792) (nil fontified t 1773 . 1776) (nil fontified t 1772 . 1773) (nil fontified t 1769 . 1772) (nil fontified t 1768 . 1769) (nil fontified t 1757 . 1768) (nil fontified t 1756 . 1757) (nil fontified t 1753 . 1756) (nil fontified t 1752 . 1753) (nil fontified t 1723 . 1752) (nil fontified t 1722 . 1723) (nil fontified t 1720 . 1722) (nil fontified t 1719 . 1720) (nil fontified t 1686 . 1719) (nil rear-nonsticky t 2370 . 2371)) nil (26052 30479 325265 482000) 0 nil])
([nil nil ((#("code " 0 5 (face css-selector fontified t)) . 1185) (undo-tree-id15 . -4) (undo-tree-id16 . -5) (t 26052 30456 53373 144000)) nil (26052 30479 325258 176000) 0 nil])
([nil nil ((1185 . 1189)) nil (26052 30479 325247 231000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2369 . 2370) (nil fontified nil 1685 . 2370) (1685 . 2370) (t 26052 30479 344365 930000)) nil (26052 30576 633619 770000) 0 nil])
([nil nil ((#("#include <stdio.h>


char symbols[36]; // maximum base 36; digits (0-9) and alpha (A-Z)


void dec_to_base(int n, int base) {

    if (!n) return;


    dec_to_base(n/base, base);

    putchar(symbols[n % base]);    // least significant bit so printing last

}


int main(void) {

    int base, n;

    scanf(\"%d %d\", &base, &n);


    if (base < 2 || base > 36) {

        printf(\"Only 2 to 36 bases are supported.\\n\");

        return 0;

    }


    if (!n) {

        printf(\"0\\n\");

        return 0;

    }


    // initializing symbols

    for (int i = 0; i < base; i++)

        symbols[i] = (i >= 10) ? 'A' + i-10 : '0' + i;


    dec_to_base(n, base);

    putchar('\\n');

}" 0 33 (fontified nil) 33 34 (face (rainbow-delimiters-depth-2-face) fontified nil) 34 36 (fontified nil) 36 37 (face (rainbow-delimiters-depth-2-face) fontified nil) 37 66 (fontified nil) 66 67 (face (rainbow-delimiters-depth-2-face) fontified nil) 67 70 (fontified nil) 70 71 (face (rainbow-delimiters-depth-2-face) fontified nil) 71 82 (fontified nil) 82 83 (face (rainbow-delimiters-depth-2-face) fontified nil) 83 86 (fontified nil) 86 87 (face (rainbow-delimiters-depth-2-face) fontified nil) 87 90 (fontified nil) 90 106 (face css-selector fontified nil) 106 107 (face (rainbow-delimiters-depth-2-face css-selector) fontified nil) 107 122 (face css-selector fontified nil) 122 123 (face (rainbow-delimiters-depth-2-face css-selector) fontified nil) 123 124 (fontified nil) 124 125 (face (rainbow-delimiters-depth-2-face) fontified nil) 125 134 (fontified nil) 134 135 (face (rainbow-delimiters-depth-3-face) fontified nil) 135 137 (fontified nil) 137 138 (face (rainbow-delimiters-depth-3-face) fontified nil) 138 164 (fontified nil) 164 165 (face (rainbow-delimiters-depth-3-face) fontified nil) 165 177 (fontified nil) 177 178 (face (rainbow-delimiters-depth-3-face) fontified nil) 178 192 (fontified nil) 192 193 (face (rainbow-delimiters-depth-3-face) fontified nil) 193 200 (fontified nil) 200 201 (face (rainbow-delimiters-depth-4-face) fontified nil) 201 209 (fontified nil) 209 210 (face (rainbow-delimiters-depth-4-face) fontified nil) 210 211 (face (rainbow-delimiters-depth-3-face) fontified nil) 211 259 (fontified nil) 259 260 (face (rainbow-delimiters-depth-2-face) fontified nil) 260 263 (fontified nil) 263 271 (face css-selector fontified nil) 271 272 (face (rainbow-delimiters-depth-2-face css-selector) fontified nil) 272 276 (face css-selector fontified nil) 276 277 (face (rainbow-delimiters-depth-2-face css-selector) fontified nil) 277 278 (fontified nil) 278 279 (face (rainbow-delimiters-depth-2-face) fontified nil) 279 308 (fontified nil) 308 309 (face (rainbow-delimiters-depth-3-face) fontified nil) 309 316 (face font-lock-string-face fontified nil) 316 327 (fontified nil) 327 328 (face (rainbow-delimiters-depth-3-face) fontified nil) 328 339 (fontified nil) 339 340 (face (rainbow-delimiters-depth-3-face) fontified nil) 340 361 (fontified nil) 361 362 (face (rainbow-delimiters-depth-3-face) fontified nil) 362 363 (fontified nil) 363 364 (face (rainbow-delimiters-depth-3-face) fontified nil) 364 380 (fontified nil) 380 381 (face (rainbow-delimiters-depth-4-face) fontified nil) 381 418 (face font-lock-string-face fontified nil) 418 419 (face (rainbow-delimiters-depth-4-face) fontified nil) 419 445 (fontified nil) 445 446 (face (rainbow-delimiters-depth-3-face) fontified nil) 446 456 (fontified nil) 456 457 (face (rainbow-delimiters-depth-3-face) fontified nil) 457 459 (fontified nil) 459 460 (face (rainbow-delimiters-depth-3-face) fontified nil) 460 461 (fontified nil) 461 462 (face (rainbow-delimiters-depth-3-face) fontified nil) 462 478 (fontified nil) 478 479 (face (rainbow-delimiters-depth-4-face) fontified nil) 479 484 (face font-lock-string-face fontified nil) 484 485 (face (rainbow-delimiters-depth-4-face) fontified nil) 485 511 (fontified nil) 511 512 (face (rainbow-delimiters-depth-3-face) fontified nil) 512 552 (fontified nil) 552 553 (face (rainbow-delimiters-depth-3-face) fontified nil) 553 577 (fontified nil) 577 578 (face (rainbow-delimiters-depth-3-face) fontified nil) 578 595 (fontified nil) 595 596 (face (rainbow-delimiters-depth-3-face) fontified nil) 596 597 (fontified nil) 597 598 (face (rainbow-delimiters-depth-3-face) fontified nil) 598 601 (fontified nil) 601 602 (face (rainbow-delimiters-depth-3-face) fontified nil) 602 609 (fontified nil) 609 610 (face (rainbow-delimiters-depth-3-face) fontified nil) 610 613 (fontified nil) 613 616 (face font-lock-string-face fontified nil) 616 626 (fontified nil) 626 629 (face font-lock-string-face fontified nil) 629 652 (fontified nil) 652 653 (face (rainbow-delimiters-depth-3-face) fontified nil) 653 660 (fontified nil) 660 661 (face (rainbow-delimiters-depth-3-face) fontified nil) 661 675 (fontified nil) 675 676 (face (rainbow-delimiters-depth-3-face) fontified nil) 676 680 (face font-lock-string-face fontified nil) 680 681 (face (rainbow-delimiters-depth-3-face) fontified nil) 681 684 (fontified nil) 684 685 (face (rainbow-delimiters-depth-2-face) rear-nonsticky nil fontified nil)) . 1685) (undo-tree-id80 . -684) (undo-tree-id81 . -147) (undo-tree-id82 . -147) (nil fontified t 2366 . 2369) (nil fontified t 2365 . 2366) (nil fontified t 2361 . 2365) (nil fontified t 2360 . 2361) (nil fontified t 2346 . 2360) (nil fontified t 2345 . 2346) (nil fontified t 2338 . 2345) (nil fontified t 2337 . 2338) (nil fontified t 2314 . 2337) (nil fontified t 2311 . 2314) (nil fontified t 2301 . 2311) (nil fontified t 2298 . 2301) (nil fontified t 2295 . 2298) (nil fontified t 2294 . 2295) (nil fontified t 2287 . 2294) (nil fontified t 2286 . 2287) (nil fontified t 2283 . 2286) (nil fontified t 2282 . 2283) (nil fontified t 2281 . 2282) (nil fontified t 2280 . 2281) (nil fontified t 2263 . 2280) (nil fontified t 2262 . 2263) (nil fontified t 2238 . 2262) (nil fontified t 2237 . 2238) (nil fontified t 2197 . 2237) (nil fontified t 2196 . 2197) (nil fontified t 2170 . 2196) (nil fontified t 2169 . 2170) (nil fontified t 2164 . 2169) (nil fontified t 2163 . 2164) (nil fontified t 2147 . 2163) (nil fontified t 2146 . 2147) (nil fontified t 2145 . 2146) (nil fontified t 2144 . 2145) (nil fontified t 2142 . 2144) (nil fontified t 2141 . 2142) (nil fontified t 2131 . 2141) (nil fontified t 2130 . 2131) (nil fontified t 2104 . 2130) (nil fontified t 2103 . 2104) (nil fontified t 2066 . 2103) (nil fontified t 2065 . 2066) (nil fontified t 2049 . 2065) (nil fontified t 2048 . 2049) (nil fontified t 2047 . 2048) (nil fontified t 2046 . 2047) (nil fontified t 2025 . 2046) (nil fontified t 2024 . 2025) (nil fontified t 2013 . 2024) (nil fontified t 2012 . 2013) (nil fontified t 2001 . 2012) (nil fontified t 1994 . 2001) (nil fontified t 1993 . 1994) (nil fontified t 1964 . 1993) (nil fontified t 1963 . 1964) (nil fontified t 1962 . 1963) (nil fontified t 1961 . 1962) (nil fontified t 1957 . 1961) (nil fontified t 1956 . 1957) (nil fontified t 1948 . 1956) (nil fontified t 1945 . 1948) (nil fontified t 1944 . 1945) (nil fontified t 1896 . 1944) (nil fontified t 1895 . 1896) (nil fontified t 1894 . 1895) (nil fontified t 1886 . 1894) (nil fontified t 1885 . 1886) (nil fontified t 1878 . 1885) (nil fontified t 1877 . 1878) (nil fontified t 1863 . 1877) (nil fontified t 1862 . 1863) (nil fontified t 1850 . 1862) (nil fontified t 1849 . 1850) (nil fontified t 1823 . 1849) (nil fontified t 1822 . 1823) (nil fontified t 1820 . 1822) (nil fontified t 1819 . 1820) (nil fontified t 1810 . 1819) (nil fontified t 1809 . 1810) (nil fontified t 1808 . 1809) (nil fontified t 1807 . 1808) (nil fontified t 1792 . 1807) (nil fontified t 1791 . 1792) (nil fontified t 1775 . 1791) (nil fontified t 1772 . 1775) (nil fontified t 1771 . 1772) (nil fontified t 1768 . 1771) (nil fontified t 1767 . 1768) (nil fontified t 1756 . 1767) (nil fontified t 1755 . 1756) (nil fontified t 1752 . 1755) (nil fontified t 1751 . 1752) (nil fontified t 1722 . 1751) (nil fontified t 1721 . 1722) (nil fontified t 1719 . 1721) (nil fontified t 1718 . 1719) (nil fontified t 1685 . 1718) (nil rear-nonsticky t 2369 . 2370)) nil (26052 30576 633617 598000) 0 nil])
([nil nil ((#("::before" 0 8 (face css-selector fontified t)) . 1196) (undo-tree-id76 . -7) (undo-tree-id77 . -7) (undo-tree-id78 . -7) (undo-tree-id79 . -7) 1203 (t 26052 30479 344365 930000)) nil (26052 30576 633610 454000) 0 nil])
([nil nil ((1201 . 1208) (#("content" 0 7 (face css-property fontified t)) . 1201) (undo-tree-id20 . -6) (undo-tree-id21 . -7) (undo-tree-id22 . -7) (undo-tree-id23 . -7) (undo-tree-id24 . -7) (undo-tree-id25 . -7) (undo-tree-id26 . -7) (undo-tree-id27 . -7) (undo-tree-id28 . -6) (undo-tree-id29 . -6) (undo-tree-id30 . -6) (undo-tree-id31 . -6) (undo-tree-id32 . -6) (undo-tree-id33 . -6) (undo-tree-id34 . -6) (undo-tree-id35 . -5) (undo-tree-id36 . -5) (undo-tree-id37 . -5) (undo-tree-id38 . -5) (undo-tree-id39 . -5) (undo-tree-id40 . -5) (undo-tree-id41 . -5) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -7) (undo-tree-id75 . -7) 1204) nil (26052 30576 633605 680000) 0 nil])
([nil nil ((#("display" 0 7 (face css-property fontified t)) . 1201) (undo-tree-id261 . -6) (undo-tree-id262 . -6) (undo-tree-id263 . -6) (undo-tree-id264 . -6) 1207 (t 26052 30576 651857 658000)) nil (26052 30618 30903 135000) 0 nil])
([nil nil ((1201 . 1208)) nil (26052 30618 30901 563000) 0 nil])
([nil nil ((#("display" 0 7 (face css-property fontified t)) . 1201) (undo-tree-id217 . -6) (undo-tree-id218 . -6) (undo-tree-id219 . -6) (undo-tree-id220 . -6) (undo-tree-id221 . -6) (undo-tree-id222 . -6) (undo-tree-id223 . -6) (undo-tree-id224 . -6) (undo-tree-id225 . -6) (undo-tree-id226 . -6) (undo-tree-id227 . -6) (undo-tree-id228 . -6) (undo-tree-id229 . -6) (undo-tree-id230 . -6) (undo-tree-id231 . -6) (undo-tree-id232 . -6) (undo-tree-id233 . -6) (undo-tree-id234 . -6) (undo-tree-id235 . -6) (undo-tree-id236 . -6) (undo-tree-id237 . -6) (undo-tree-id238 . -6) (undo-tree-id239 . -6) (undo-tree-id240 . -6) (undo-tree-id241 . -6) (undo-tree-id242 . -6) (undo-tree-id243 . -6) (undo-tree-id244 . -6) (undo-tree-id245 . -6) (undo-tree-id246 . -6) (undo-tree-id247 . -6) (undo-tree-id248 . -6) (undo-tree-id249 . -6) (undo-tree-id250 . -6) (undo-tree-id251 . -6) (undo-tree-id252 . -6) (undo-tree-id253 . -6) (undo-tree-id254 . -6) (undo-tree-id255 . -6) (undo-tree-id256 . -6) (undo-tree-id257 . -6) (undo-tree-id258 . -6) (undo-tree-id259 . -6) (undo-tree-id260 . -7) 1207 (t 26052 30576 651857 658000)) nil (26052 30618 30900 383000) 0 nil])
([nil nil ((1201 . 1208)) nil (26052 30618 30887 598000) 0 nil])
([nil nil ((#("display" 0 7 (face css-property fontified t)) . 1201) (undo-tree-id175 . -6) (undo-tree-id176 . -6) (undo-tree-id177 . -6) (undo-tree-id178 . -6) (undo-tree-id179 . -6) (undo-tree-id180 . -6) (undo-tree-id181 . -6) (undo-tree-id182 . -6) (undo-tree-id183 . -6) (undo-tree-id184 . -6) (undo-tree-id185 . -6) (undo-tree-id186 . -6) (undo-tree-id187 . -6) (undo-tree-id188 . -6) (undo-tree-id189 . -6) (undo-tree-id190 . -6) (undo-tree-id191 . -6) (undo-tree-id192 . -6) (undo-tree-id193 . -6) (undo-tree-id194 . -6) (undo-tree-id195 . -6) (undo-tree-id196 . -6) (undo-tree-id197 . -6) (undo-tree-id198 . -6) (undo-tree-id199 . -6) (undo-tree-id200 . -6) (undo-tree-id201 . -6) (undo-tree-id202 . -6) (undo-tree-id203 . -6) (undo-tree-id204 . -6) (undo-tree-id205 . -6) (undo-tree-id206 . -6) (undo-tree-id207 . -6) (undo-tree-id208 . -6) (undo-tree-id209 . -6) (undo-tree-id210 . -6) (undo-tree-id211 . -6) (undo-tree-id212 . -6) (undo-tree-id213 . -6) (undo-tree-id214 . -6) (undo-tree-id215 . -6) (undo-tree-id216 . -6) 1207 (t 26052 30576 651857 658000)) nil (26052 30618 30886 430000) 0 nil])
([nil nil ((1201 . 1208)) nil (26052 30618 30871 213000) 0 nil])
([nil nil ((1201 . 1208) (#("display" 0 7 (face css-property fontified t)) . 1201) (undo-tree-id133 . -6) (undo-tree-id134 . -6) (undo-tree-id135 . -6) (undo-tree-id136 . -6) (undo-tree-id137 . -6) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (undo-tree-id140 . -6) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -6) (undo-tree-id145 . -6) (undo-tree-id146 . -6) (undo-tree-id147 . -6) (undo-tree-id148 . -6) (undo-tree-id149 . -6) (undo-tree-id150 . -6) (undo-tree-id151 . -6) (undo-tree-id152 . -6) (undo-tree-id153 . -6) (undo-tree-id154 . -6) (undo-tree-id155 . -6) (undo-tree-id156 . -6) (undo-tree-id157 . -6) (undo-tree-id158 . -6) (undo-tree-id159 . -6) (undo-tree-id160 . -6) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) (undo-tree-id166 . -6) (undo-tree-id167 . -6) (undo-tree-id168 . -6) (undo-tree-id169 . -6) (undo-tree-id170 . -6) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -6) (undo-tree-id174 . -6) 1207 (t 26052 30576 651857 658000)) nil (26052 30618 30869 446000) 0 nil])
([nil nil ((#("pre span.linenr {
  content: none; /* Hide the line numbers */
}
" 0 15 (face css-selector fontified t) 15 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-1-face) fontified t) 17 18 (fontified t) 18 20 (fontified t) 20 27 (face css-property fontified t) 27 35 (fontified t) 35 38 (face font-lock-comment-delimiter-face fontified t) 38 59 (face font-lock-comment-face fontified t) 59 62 (face font-lock-comment-delimiter-face fontified t) 62 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 64 65 (fontified t)) . 1181) (undo-tree-id83 . -26) (undo-tree-id84 . -64) (undo-tree-id85 . -64) (undo-tree-id86 . 38) (undo-tree-id87 . -36) (undo-tree-id88 . -36) (undo-tree-id89 . -7) (undo-tree-id90 . -7) (undo-tree-id91 . -8) (undo-tree-id92 . -64) (undo-tree-id93 . -20) (undo-tree-id94 . -20) (undo-tree-id95 . -20) (undo-tree-id96 . -20) (undo-tree-id97 . -20) (undo-tree-id98 . -20) (undo-tree-id99 . -20) (undo-tree-id100 . -20) (undo-tree-id101 . -20) (undo-tree-id102 . -20) (undo-tree-id103 . -20) (undo-tree-id104 . -20) (undo-tree-id105 . -20) (undo-tree-id106 . -20) (undo-tree-id107 . -20) (undo-tree-id108 . -20) (undo-tree-id109 . -20) (undo-tree-id110 . -20) (undo-tree-id111 . -20) (undo-tree-id112 . -20) (undo-tree-id113 . -20) (undo-tree-id114 . -20) (undo-tree-id115 . -20) (undo-tree-id116 . -20) (undo-tree-id117 . -20) (undo-tree-id118 . -20) (undo-tree-id119 . -20) (undo-tree-id120 . -20) (undo-tree-id121 . -20) (undo-tree-id122 . -20) (undo-tree-id123 . -20) (undo-tree-id124 . -20) (undo-tree-id125 . -20) (undo-tree-id126 . -20) (undo-tree-id127 . -20) (undo-tree-id128 . -20) (undo-tree-id129 . -20) (undo-tree-id130 . -20) (undo-tree-id131 . -26) (undo-tree-id132 . -64) 1245) nil (26052 30618 30839 524000) 0 nil])
([nil nil ((1124 . 1126) (#("li" 0 2 (face css-selector fontified t)) . 1124) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (t 26052 30618 50298 162000)) nil (26052 35006 155937 981000) 0 nil])
([nil nil ((1124 . 1126) (#("ul" 0 2 (face css-selector fontified t)) . 1124) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1)) nil (26052 35006 155935 482000) 0 nil])
([nil nil ((1126 . 1129) (t 26052 30618 50298 162000)) nil (26052 35006 155921 997000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1183 . 1184) (#("
" 0 1 (fontified nil)) . -1215) (1183 . 1216) 1182 (t 26052 35006 172658 58000)) nil (26052 35880 662059 110000) 0 nil])
([nil nil ((#("
#text-table-of-contents li li {
" 0 1 (rear-nonsticky nil fontified nil) 1 24 (face css-selector fontified nil) 24 25 (face css-selector fontified nil) 25 27 (face css-selector fontified nil) 27 30 (face css-selector fontified nil) 30 31 (fontified nil) 31 32 (face (rainbow-delimiters-depth-1-face) fontified nil) 32 33 (fontified nil)) . 1183) (undo-tree-id285 . -1) (undo-tree-id286 . -32) (undo-tree-id287 . -5) (undo-tree-id288 . -5) (undo-tree-id289 . -5) (undo-tree-id290 . -5) (undo-tree-id291 . -7) (undo-tree-id292 . -7) (undo-tree-id293 . -7) (undo-tree-id294 . -7) (undo-tree-id295 . -7) (undo-tree-id296 . -7) (undo-tree-id297 . -7) (undo-tree-id298 . -8) (undo-tree-id299 . -8) (undo-tree-id300 . -8) (undo-tree-id301 . -8) (undo-tree-id302 . -8) (undo-tree-id303 . -8) (undo-tree-id304 . -8) (undo-tree-id305 . -9) (undo-tree-id306 . -9) (undo-tree-id307 . -9) (undo-tree-id308 . -9) (undo-tree-id309 . -9) (undo-tree-id310 . -9) (undo-tree-id311 . -9) (undo-tree-id312 . -10) (undo-tree-id313 . -10) (undo-tree-id314 . -10) (undo-tree-id315 . -10) (undo-tree-id316 . -10) (undo-tree-id317 . -10) (undo-tree-id318 . -10) (undo-tree-id319 . -11) (undo-tree-id320 . -11) (undo-tree-id321 . -11) (undo-tree-id322 . -11) (undo-tree-id323 . -11) (undo-tree-id324 . -11) (undo-tree-id325 . -11) (undo-tree-id326 . -12) (undo-tree-id327 . -12) (undo-tree-id328 . -12) (undo-tree-id329 . -12) (undo-tree-id330 . -12) (undo-tree-id331 . -12) (undo-tree-id332 . -12) (undo-tree-id333 . -13) (undo-tree-id334 . -13) (undo-tree-id335 . -13) (undo-tree-id336 . -13) (undo-tree-id337 . -13) (undo-tree-id338 . -13) (undo-tree-id339 . -13) (undo-tree-id340 . -14) (undo-tree-id341 . -14) (undo-tree-id342 . -14) (undo-tree-id343 . -14) (undo-tree-id344 . -14) (undo-tree-id345 . -14) (undo-tree-id346 . -14) (undo-tree-id347 . -15) (undo-tree-id348 . -15) (undo-tree-id349 . -15) (undo-tree-id350 . -15) (undo-tree-id351 . -15) (undo-tree-id352 . -15) (undo-tree-id353 . -15) (undo-tree-id354 . -16) (undo-tree-id355 . -16) (undo-tree-id356 . -16) (undo-tree-id357 . -16) (undo-tree-id358 . -16) (undo-tree-id359 . -16) (undo-tree-id360 . -16) (undo-tree-id361 . -17) (undo-tree-id362 . -17) (undo-tree-id363 . -17) (undo-tree-id364 . -17) (undo-tree-id365 . -17) (undo-tree-id366 . -17) (undo-tree-id367 . -17) (undo-tree-id368 . -18) (undo-tree-id369 . -18) (undo-tree-id370 . -18) (undo-tree-id371 . -18) (undo-tree-id372 . -18) (undo-tree-id373 . -18) (undo-tree-id374 . -18) (undo-tree-id375 . -19) (undo-tree-id376 . -19) (undo-tree-id377 . -19) (undo-tree-id378 . -19) (undo-tree-id379 . -19) (undo-tree-id380 . -19) (undo-tree-id381 . -19) (undo-tree-id382 . -20) (undo-tree-id383 . -20) (undo-tree-id384 . -20) (undo-tree-id385 . -20) (undo-tree-id386 . -20) (undo-tree-id387 . -20) (undo-tree-id388 . -20) (undo-tree-id389 . -21) (undo-tree-id390 . -21) (undo-tree-id391 . -21) (undo-tree-id392 . -21) (undo-tree-id393 . -21) (undo-tree-id394 . -21) (undo-tree-id395 . -21) (undo-tree-id396 . -22) (undo-tree-id397 . -22) (undo-tree-id398 . -22) (undo-tree-id399 . -22) (undo-tree-id400 . -22) (undo-tree-id401 . -22) (undo-tree-id402 . -22) (undo-tree-id403 . -23) (undo-tree-id404 . -23) (undo-tree-id405 . -23) (undo-tree-id406 . -23) (undo-tree-id407 . -23) (undo-tree-id408 . -23) (undo-tree-id409 . -23) (undo-tree-id410 . -1) (undo-tree-id411 . -24) (undo-tree-id412 . -24) (undo-tree-id413 . -24) (undo-tree-id414 . -24) (undo-tree-id415 . -24) (undo-tree-id416 . -24) (undo-tree-id417 . -24) (undo-tree-id418 . -24) (undo-tree-id419 . -24) (undo-tree-id420 . -24) (undo-tree-id421 . -24) (undo-tree-id422 . -24) (undo-tree-id423 . -24) (undo-tree-id424 . -24) (undo-tree-id425 . -24) (undo-tree-id426 . -24) (1215 . 1216) (nil rear-nonsticky t 1183 . 1184)) nil (26052 35880 662056 189000) 0 nil])
([nil nil ((1100 . 1132) (t 26052 35006 172658 58000)) nil (26052 35880 662002 807000) 0 nil])
([nil nil ((1129 . 1133) (#("    " 0 4 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1129) (1129 . 1133) (1128 . 1130) (1124 . 1129) (#("li li {" 0 2 (face css-selector fontified t) 2 5 (face css-selector fontified t) 5 6 (fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1124) (undo-tree-id284 . -6)) nil (26052 35880 662002 9000) 0 nil])
([nil nil ((1124 . 1131) (#("ul {}" 0 2 (face css-selector fontified nil) 2 3 (fontified nil) 3 4 (face (rainbow-delimiters-depth-1-face) fontified nil) 4 5 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1124) (undo-tree-id277 . -1) (undo-tree-id278 . 1) (undo-tree-id279 . -1) (undo-tree-id280 . -4) (#("

" 0 1 (fontified t) 1 2 (fontified nil)) . 1128) (undo-tree-id281 . 1) (undo-tree-id282 . -1) (#("    " 0 4 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1129) (1129 . 1133) (#("    " 0 4 (fontified t)) . 1129) (undo-tree-id283 . -3)) nil (26052 35880 662000 194000) 0 nil])
([nil current ((#("#text-table-of-contents li li {
" 0 23 (face css-selector fontified t) 23 24 (face css-selector fontified t) 24 26 (face css-selector fontified t) 26 29 (face css-selector fontified t) 29 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 32 (fontified t)) . 1100) (undo-tree-id271 . -24) (undo-tree-id272 . -24) (undo-tree-id273 . -30) (undo-tree-id274 . 1) (undo-tree-id275 . -24) (undo-tree-id276 . -24)) nil (26052 35880 661995 63000) 0 nil])
nil
